# SQLite database
# ---
db:
  address: /path/to/sharkey.db
  type: sqlite

# MySQL database
# ---
# db:
#   username: root
#   password: password
#   address: hostname:port
#   schema: ssh_ca
#   type: mysql
#   tls:                                       # MySQL TLS config (optional)
#     ca: /path/to/mysql-ca-bundle.pem
#     cert: /path/to/mysql-client-cert.pem     # MySQL client cert
#     key: /path/to/mysql-client-cert-key.pem  # MySQL client cert key

# Server listening address
listen_addr: "0.0.0.0:8080"

# TLS config for serving requests
# ---
tls:
  ca: /path/to/ca-bundle.pem
  cert: /path/to/server-certificate.pem
  key: /path/to/server-certificate-key.pem

# Signing key (from ssh-keygen)
signing_key: /path/to/ca-signing-key

# Lifetime/validity duration for generated host certificates
cert_duration: 168h

# Optional suffix to strip from client hostnames when generating certificates.
# This is useful if all your machines have a common TLD/domain, and you want to
# include an alias in the generated certificate that doesn't include that suffix.
# Leave empty to disable
strip_suffix: ".example.com"

# Optional set of aliases for hosts. If a hostname matches an alias entry, the
# listed principals will be added to its certificate. This is useful if you have
# special hosts that are accessed via CNAME records.
aliases:
  "host.example.com":
    - "alias1.example.com"
    - "alias2.example.com"

# Optional set of extra entries to provide to clients when they fetch a known_hosts
# file. This is useful if you have externally-managed servers in your infrastructure
# that you want to tell clients about, of if you want to add CA entries to the
# known_hosts file.
extra_known_hosts:
  - "@cert-authority *.example.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDBwhA8rKPESjDy4iqTlkBqUlBU2xjwtmFUHY6cutA9TYbB5H/mjxzUpnSNw/HyFWNpysjTSQtHWWBdJdJGU/0aDgFUwbduHeDFxviGVSkOxm2AYn7XJopzITZRqmAmsYXHUBa75RQb+UgIG7EpCoi8hF4ItJV+TT777j1irkXwlMmeDiJEaA+7bPNdUdGw8zRbk0CyeotYVD0griRtkXdfgnQAu+DvBwOuW/uiZaPz/rAVjt4b9fmp6pcFKI3RsBqqn5tQVhKCPVuSwqvIQ7CTVkMClYovlH1/zGe8PG1DHbM9irP98S5j3mVD9W5v3QILpsg24RIS14M8pLarlD6t root@authority"


# Client certs are issued to users who connect through an authenticating proxy
# That client should connect with a client certificate and set the username
# in a header.
auth_proxy:
  # Hostname is validated against the incoming client certificate
  hostname: proxy.example.com
  # The HTTP header containing the username
  username_header: X-Forwarded-User
